#define abs(a-b) (a-b>=0?(a-b):b-a) 
//升序
int cmp_inc (const void *a , const void *b ){ 
    return (*(int *)a - *(int *)b); 
} 
#define MIN -30000
int threeSumClosest(int* nums, int numsSize, int target) {
    int i=0, j=0, k, three_sum, sum_closet=MIN;
    
    //升序排序
    qsort(nums, numsSize, sizeof(int), cmp_inc);

    for(i=0; i<(numsSize-2); i++){
        j = i+1;//j位于i的下一个下标
        k = numsSize-1;//k位于数据末尾
        while(j < k){
            three_sum = nums[i]+nums[j]+nums[k];
            //printf("%d, %d, %d\n", three_sum, abs(three_sum-target), abs(sum_closet-target));
            if(abs(three_sum-target) <= abs(sum_closet-target) ){
                sum_closet = three_sum;
            }
            if(three_sum>target)
                k--;
            else
                j++;
            
        }
    }

    return sum_closet;
}