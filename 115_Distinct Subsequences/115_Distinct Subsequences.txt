/*
 * 明显是一道动态规划类的题目
 * 1.问题可以分解为子问题
 * 2.问题可以右子问题的答案构成
 * 递推表达式：
 */

int numDistinct(char* s, char* t) {
    int len_s = strlen(s);
    int len_t = strlen(t);
    printf("%d %d\n", len_s, len_t);
    int dp[len_s+1][len_t+1];
    
    dp[0][0] = 0;
    for(int j=0; j<=len_t; j++){
        for(int i=j+1; i<len_s; i++){
            dp[i][j] = 0;
        }
    }
    for(int i=0; i<=len_s; i++){
        for(int j=0; j<=len_t; j++){
            printf("%d ", dp[i][j]);
        }
        printf("\n");
    }
    /*
    for(int j=1; j<=len_t; j++){
        for(int i=j; i<=len_s; i++){
            if(s[i] != s[j]){
                dp[i][j] = dp[i-1][j];
            }
            else{
                if(dp[i-1][j])
                    dp[i][j] = s[i]==s[i-1] ? dp[i-1][j]:(dp[i-1][j]+1);
                else 
                    dp[i][j] = dp[i-1][j-1];
            }
        }
    }*/
    
    for(int i=0; i<=len_s; i++){
        for(int j=0; j<=len_t; j++){
            printf("%d ", dp[i][j]);
        }
        printf("\n");
    }
    return dp[len_s][len_t];
    
    
}