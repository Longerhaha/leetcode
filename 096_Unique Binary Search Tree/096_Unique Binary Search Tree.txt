/*
 * 动态规划算法
 * 对于一个以 1 ... n 为节点组成的二叉搜索树，其根节点可能是1,2,3,...n
 * 根节点为i(1<=i<=n)，左边有i-1个节点（这i-1个节点也是个二叉搜索树），右边有(n-1-i)个节点（这(n-1-i)个节点也是个二叉搜索树）
 * 故其有dp[i-1]*dp[n-i]种可能。
 * 所以dp[n] = sum(dp[i-1]*dp[n-1-i], i=0,1,2...,n)
 */

int numTrees(int n) {
    int dp[n+1];
    memset(dp, 0, sizeof(int)*(n+1));
    dp[0] = dp[1] = 1;
    for(int j=2; j<=n; j++){
        for(int i=1; i<=j; i++){
            dp[j] += dp[i-1]*dp[j-i];
        }
    }
    return dp[n];
}