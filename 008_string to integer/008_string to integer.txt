int myAtoi(char* str) {
    double ans = 0;
    int i = 0;
    int sign = 0;//-1有符号出现 0无符号（正整数） 1有正号出现
    int len_str = strlen(str);
    //先找到第一个非空的字符
    while(' ' == str[i]){
        i++;
    }

    //空白字符串
    if(len_str == i){
        return 0;
    }
           
    if('-' == str[i]){//若是负数
        sign = -1;
    }   
    else if('+' == str[i]){
        sign = 1;
    }
    else if((str[i]>'9') || (str[i]<'0'))// 第一个非空字符是非数字
        return 0;
 
    if(sign && ((i+1)<len_str) && ('0'>str[i+1] || str[i+1]>'9'))//"+ 123"、"+-1213"这样的无效字符
        return 0;
    
    
    if(-1 == sign){//如果是负数
        i++;
        if(len_str == i){//只输入'-'
            return 0;
        }
        while('0'<=str[i] && str[i]<='9'){
            ans = ans*10+str[i]-'0';
            i++;
        }
        ans = -ans;//取负号
        if(ans<-2147483648)//是否超越整型范围
            ans = -2147483648;
    }
    else{
        if(sign){//有正号出现
            i++;
        }
        if(len_str == i){//只输入'+'
            return 0;
        }
        //i移到整数的位置
        while('0'>str[i] || str[i]>'9'){
            i++;
        }
        //获取连续整数字符的值
        while('0'<=str[i] && str[i]<='9'){
            ans = ans*10+str[i]-'0';
            i++;
        }
        if(ans > 2147483647)//是否超越整型范围
            ans = 2147483647;
    }
    return (int)ans;
}